variables:
- group: WinUITeamKeyVault-Secrets
parameters:
  resourceStagingDirectory: $(Build.ArtifactStagingDirectory)\LocStaging
  resourceOutputDirectory: $(Build.ArtifactStagingDirectory)\LocOutput


name: $(BuildDefinitionName)_$(date:yyMM).$(date:dd)$(rev:rrr)
jobs:
- job: LocalizationHandoff
  pool:
    name: Package ES Standard Build

  steps:
  - task: PkgESSetupBuild@10
    displayName: 'XESSetupBuild'
    inputs:
      productName: dep.controls
      branchVersion: true
      nugetVer: true
      useDfs: false

  - powershell: |
      & "$env:Build_SourcesDirectory\build\Localization\PrepLocFilesForUpload.ps1" `
        -DestinationFilePath '${{ parameters.resourceStagingDirectory }}'
    displayName: 'PrepLocFilesForUpload.ps1'

  - task: TouchdownBuildTask@1
    displayName: 'Call Touchdown Build Service'
    inputs:
      isPreview: true
      environment: 'PRODEXT'
      teamId: '104'
      authType: 'OAuth'
      authId: 'e8416663-8a55-4cb6-9bba-12038b37a6ed'
      authKey: $(WinUILab-TouchdownLoc-Key)
      relativePathRoot: ${{ parameters.resourceStagingDirectory }}
      resourceFilePath: '**/Resources.resw'
      outputDirectoryRoot: ${{ parameters.resourceOutputDirectory }}
      appendRelativeDir: true
      cultureMappingType: 'None'

  # - task: PublishBuildArtifacts@1
  #   displayName: 'Publish Artifacts - Localized Resources'
  #   condition: always()
  #   inputs:
  #     PathtoPublish: ${{ parameters.resourceOutputDirectory }}
  #     artifactName: 'LocalizationDrop'
  #     parallel: true
  #     parallelCount: 8

  # - powershell: |
  #     $changes = & git ls-files -m
  #     Write-Host "Edited files:"
  #     Write-Host "$changes"
  #     if ($changes -imatch "\.resw")
  #     {
  #       Write-Host "##vso[task.complete result=SucceededWithIssues;]"
  #       Write-Host "##vso[task.logissue type=warning;]Localization updates needed"
  #       foreach ($change in $changes)
  #       {
  #         Write-Host "##vso[task.logissue type=warning;]$change"
  #       }
  #     }
  #   displayName: checkEditedFiles